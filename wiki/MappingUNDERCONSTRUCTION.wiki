#summary Getting custom RTCW SP maps converted in RTCW Coop mod.

*!!!!!!This tutorial is currently under construction!!!!!!!!* 

<wiki:toc max_depth="5" />

=Introduction=

Aim of this tutorial is to be up-to-date tutorial and list of features that can be used to get a map running for RTCW Coop from RTCW SP.

This has been done in Windows 7 environment. Users of other OS' must figure the correct folders.

I can't be held responsible for anything. Any feedback, questions, tutorial requests or such can be pointed out on our official mod forum:

[http://www.rtcwcoop.com/forum/ Go to the forums!]

Good luck and have fun from

-SSF-Sage



= Map Conversion Tutorial =

== 1. Introduction to RTCW Coop map converting ==

=== 1.1. I want custom! ===
So you want to play a custom map in RTCW COOP mod? Fear not, it is fairly simple and fast. It will help tons if you know understand basics of map scripting. But even if you know nothing about scripting it is possible to play a custom with a bit of luck, patience, well created map and this tutorial.

If you are not really good scripter, pick up a simple small map at first. Make sure it runs perfectly in SP. Select one that has *no* cutscenes. Cutscene scripting needs to be removed and skipped.

When you create a custom map. Remember to test it many times before releasing it. Also do test it multiple times with your friends on a dedicated server. Many bugs you will encounter only happens when there is more than 1 player on the server.

=== 1.2. Remember respect! ===
It is recommended and friendly that you contact the original author of the map. If you can't contact the author, it is on your own risk. If you don't get contact and still want to proceed, it is recommended that you do not alter gameplay or original files. Also do remember to give full credit to the hard work by original author!

=== 1.3.Difference between Coop and SP ===

While you are reading this, you probably have basic understanding of the difference between Coop and SP. If not go to a server and try it out.

Basicly things are almost same. Same BSP files can be used. BSP file is the heart of the map. Generally SP maps and Coop maps are same, commands and file work the same. However as we are playing in SP maps in MP environment we need to have a little edits in the scripts. 

In most time all we need to do is edit the .AI file that has AI scripting in it. Then the .script file that has brush scripting. Also we need to add .ents file to add new entities, such as spawns. Rest of the file edits are mostly cosmetical.

=== 1.4. Folder where we store all the changing files ===

This is the main folder where all screenshots you take goes. Where your config is stored. Where game creates .ents file. This folder can be used to place mapping files for easy testing. Do mind this affects all installations!

In RTCW COOP 0.9.5 the folder locates in:

C://Documents and settings/User/Files/RtcwCOOP/main/

== 2. Getting able to shoot and run ==

I just want to frag a couple AIs in a custom SP map with my friends!

=== 2.1. Adding the map ===

It is simple. Download the original pk3 file. Place it in your game installation folder inside main folder. Just like you would do it in regular RTCW.

=== 2.2. Starting map ===

Load RTCW Coop. Type /coopdevmap mymapname into console. Doing this allows us to play the map in developer mode. We can use cheats. Check the list of useful commands to learn more.

The map should start now. Many things don't work, but you should be able to run around. If the map don't start it has faults. Try another map, debug it or ask for help.


=== 2.3. Let the mod read map scripts ===

 * 1) Open the custom pk3 file
 * 2) Go to folder main inside the pk3 file
 * 3) Copy the files called mymap.ai and mymap.script
 * 4) Paste these two files into C://Documents and settings/User/Files/RtcwCOOP/main/maps folder
 * 5) Rename the files. You should now have mymap.coop.ai and mymap.coop.script files

Now the AI should have guns, be able to run and perform.

If the map has no script file, just ignore it for now. We will add one later.


=== 2.4. Adding first set of spawns ===

 * 1) Join Allied team. Go to where you want your first spawns.
 * 2) Type /dumpcoopspawnpoint into console, this will create first spawnpoint
 * 3) Repeat previous 8 times. We need 8 spawnpoints. 
 * 4) Close game. 
 * 5) Go to C://Documents and settings/User/Files/RtcwCOOP/main/maps/ folder
 * 6) Open file mapname.ents in notepad
 * 7) Fix the spawnflags, game create them wrong in mod version 0.9.5:

{{{
{
"classname" "coop_spawnpoint"
"spawnflags" "1"
"origin" "2159 -6951 69"
"angle" "-83"
}
}}}

Change spawnflags from 1 to 3:

{{{
{
"classname" "coop_spawnpoint"
"spawnflags" "3"
"origin" "2159 -6951 69"
"angle" "-83"
}
}}}

 * 8) Do the previous to all 8 of them.
 * 9) Save and exit. Reload game and test it. Use /kill and see if you can spawn in 8 different locations.

Great. Now we also learned where the .ents file is located! This is all basicly we need to play the map.

=== 2.5. Packing up to play with your friends ===

 * 1) Create a new pk3 file called eg. mymap_coop_pk3

_It is recommended to create a new pk3 for the Coop files only._

 * 2) Create a folder called maps inside the pk3

 * 3) Paste the .ai ; .script and .ents file inside the maps folder

_You might want to add more files later on of course._

 * 4) Add the original SP map and the small Coop modification pk3 to your server.

 * 5) Enjoy! You are ready to play. It is not perfect, but you can shoot, AI can shoot. Yay! :)


== 3. Making the map work properly ==

Just running and shooting is not enough you? You want the map to play well, be able to win a map, finish objectives, hear music? Let's continue.

If we leave the scripts as they are now, it probably work somewhat when you play alone on local. But when a friend or friends join you, weird things start to happen. 

=== 3.1. Adding MP script support ===

First we need to add a script_multiplayer entity.

 * 1) Open your .ents file.
 * 2) Add the following on top of everything in the file:

{{{
{
"classname" "script_multiplayer"
"scriptname" "game_manager"
}
}}}

 * 3) Close and save .ents file.
 * 4) Open mymapname.coop.script file in notepad

_If the map don't have one. Copy an existing script file. Open it in notepad, empty it. And then rename it._

 * 5) Add the following on top of the .script file:

{{{
game_manager
{
	spawn
	{
		trigger player map_start
	}
}
}}}

 * 6) Save and close .script file

Idea of this is to have a special trigger that only runs when the map starts. We add the trigger in second section. Do not test now.

=== 3.2. Make the map start the scripts properly ===

Open mymapname.coop.ai file and you will see something like this from our example map christmas_map:

{{{
player
{
   spawn
   {
   accum 1 set 0
   objectivesneeded 1
   abort_if_loadgame
   mu_start sound/music/l_briefing_1
   print Mission Objective: Capture the German Camp
   }


   playerstart
   {
   giveweapon weapon_knife
   giveweapon weapon_luger
   setammo ammo_9mm 100
   giveweapon weapon_mp40
   setammo ammo_grenades 3
   setammo ammo_dynamite 1
   selectweapon weapon_mp40
   mu_fade 0 100
   mu_queue sound/music/music1
   wait 7000
   mu_stop 0 100
   }

//and so on.......

}
}}}

Now we must edit this.




 * 1) Add that trigger map_start we triggered from game_manager's spawn. It will look like this:

{{{
player
{
   spawn
   {
   accum 1 set 0
   objectivesneeded 1
   abort_if_loadgame
   mu_start sound/music/l_briefing_1
   print Mission Objective: Capture the German Camp
   }

   playerstart
   {
   giveweapon weapon_knife
   giveweapon weapon_luger
   setammo ammo_9mm 100
   giveweapon weapon_mp40
   setammo ammo_grenades 3
   setammo ammo_dynamite 1
   selectweapon weapon_mp40
   mu_fade 0 100
   mu_queue sound/music/music1
   wait 7000
   mu_stop 0 100
   }

   trigger map_start
   {

   }

//and so on.......

}
}}}

 * 2) Look at spawn event. Remove such commands as:

{{{
suggestweapon
abort_if_loadgame
mu_start
}}}

 * 3) Now copy the accum, objective and such commands to trigger map_start. It should look like following now:

{{{
player
{
   spawn
   {

   }

   playerstart
   {
   giveweapon weapon_knife
   giveweapon weapon_luger
   setammo ammo_9mm 100
   giveweapon weapon_mp40
   setammo ammo_grenades 3
   setammo ammo_dynamite 1
   selectweapon weapon_mp40
   mu_fade 0 100
   mu_queue sound/music/music1
   wait 7000
   mu_stop 0 100
   }

   trigger map_start
   {
   accum 1 set 0
   objectivesneeded 1
   print Mission Objective: Capture the German Camp
   }

//and so on.......

}
}}}

 * 4) Now we must empty playerstart. It no longer is supported. Leave the empty event thought or you might get an error. Only ammo and items and music should be moved to spawn event. Optional ones to the map_start. So it should look like following:


{{{
player
{
   spawn
   {
   giveweapon weapon_knife
   giveweapon weapon_luger
   setammo ammo_9mm 100
   giveweapon weapon_mp40
   setammo ammo_grenades 3
   setammo ammo_dynamite 1
   selectweapon weapon_mp40
   mu_fade 0 100
   mu_queue sound/music/music1
   wait 7000
   mu_stop 0 100
   }

   playerstart
   {

   }

   trigger map_start
   {
   accum 1 set 0
   objectivesneeded 1
   print Mission Objective: Capture the German Camp
   }

//and so on.......

}
}}}

 * 5) Now rename mu_queue to mu_start and remove all other mu_ commands from spawn event. 

_The particular example map has different idea on music. Check music scripting section, if you want something different than this. Cosmetics.._

The final result should look like this:

{{{
player
{
   spawn
   {
   giveweapon weapon_knife
   giveweapon weapon_luger
   setammo ammo_9mm 100
   giveweapon weapon_mp40
   setammo ammo_grenades 3
   setammo ammo_dynamite 1
   selectweapon weapon_mp40

   mu_start sound/music/music1
   }

   playerstart
   {

   }

   trigger map_start
   {
   accum 1 set 0
   objectivesneeded 1
   print Mission Objective: Capture the German Camp
   }

//and so on.......

}
}}}

=== 3.3. Make the objectives work properly ===

*Accum commands does not work properly in player scriptblock!!!*

Best solution would be to move all accums and objective stuff to the game_manager in .script file.

But I have a lazy solution for you, that I have used sometimes.. So far it have worked for me. If you want to be extra safe then look at problem solving section.

Also if you for any other than objective reason want accums to work in player scriptblock. Follow this.

*Fixing accums inside player scriptblock:*

 * 1) Search the ai script with keyword globalaccum, if nothing shows up, good. If there are already globalaccum, check that the numbers don't overlap.

_The number that matter in this case is the first after accum command: accum *0* set 0 proper values for this are 0-9_

 * 2) Select and copy player script block into another txt file 

_If there are only few triggers, do it manually._

 * 3) Use replace tool to replace accum with globalaccum

 * 4) Paste it back to the .ai script.


Definition of player script block with example:

{{{
player //Starts up with this
{
   spawn
   {
   ...

   globalaccum 5 set 0   //Used to be accum 5 set 0  
   }
   

//Lots of events and triggers...


  trigger endmap
  {

  globalaccum 5 abort_if_less_than 1  //Used to be accum 5 abort_if_less_than 1
  ...
  }


} //Ends up with second } in row
}}}

*!!!NOTE!!! DO NOT REPLACE ANY MORE THAN WHAT IS INSIDE PLAYER SCRIPTBLOCK!*

=== General script functionality ===
=== 3.2. Remove any cutscene scripting ===
=== Making music work properly ===
=== Random respawning ===


== 4. Optional common Coop features ==
=== 4.1. Flag spawns ===
=== 4.2. AI reinforcements ===
=== 4.3. Axis spawnpoints ===
=== 4.4. Making single AI not respawning ===
=== 4.5. Creating loading image ===
=== 4.6. Creating levelshot images ===
=== 4.7. Showing up in Create server menu ===

== 5. Advanced/Extra features ==
=== 5.1. Adding new entities like extra guns/item
=== 5.2. Using IF commands for advantage
=== 5. Adding Notebook entries ===
=== 5. Adding clipboards ===
=== 5. Adding location info ===
=== 5.

== 6. List of useful console commands ==

== 7. Problem solving ==
=== 7.1. Bugs mapper can not fix ===
=== 7.2. Script errors ===
=== 7.3. Map objectives still bug ===

== 8. Example map ==

https://bzzwolfsp.googlecode.com/svn/wiki/mapping/christmas_map_coop_sage.pk3

== 9. Last words ==