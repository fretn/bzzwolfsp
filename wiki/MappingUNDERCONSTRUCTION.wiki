#summary STEP BY STEP: Getting custom RTCW SP maps run in RTCW Coop mod.

*!!!!!!This tutorial is currently under construction!!!!!!!!* 

Up to date with RTCW Coop mod version 0.9.5!

<wiki:toc max_depth="3" />

=Introduction=

Aim of this tutorial is to be up-to-date tutorial and list of features that can be used to get a map running for RTCW Coop from RTCW SP.
 
If this tutorial seems to be too wide and big for you, check at this very [http://www.rtcwcoop.com/forum/viewtopic.php?id=77 quick summary tutorial].

This has been done in Windows 7 environment. Users of other OS' must figure the correct folders. 

I can't be held responsible for anything. Any feedback, mistakes, questions, problems, tutorial requests or such can be pointed out on our [http://www.rtcwcoop.com/forum/ official mod forum].

Good luck and have fun from

-SSF-Sage



= Map Conversion Tutorial =

== 1. Introduction to RTCW Coop map converting ==


=== 1.1. I want custom! ===

So you want to play a custom map in RTCW COOP mod? Fear not, it is fairly simple and fast. It will help tons if you know understand basics of map scripting. But even if you know nothing about scripting/mapping it is possible to convert a custom map with a bit of luck, patience, by selecting a well created map and following this tutorial.

If you are not really good scripter, pick up a simple small map at first. Make sure it runs perfectly in SP. Select one that has *no* cutscenes. Cutscene scripting needs to be removed and skipped. Not always it is easy.

When you create a custom map. Remember to test it many times before releasing it. Also do test it multiple times with your friends on a dedicated server. Many bugs you will encounter *only* happen when there are more than 1 player on the server.


=== 1.2. Remember to respect ===

It is recommended and friendly that you contact the original author of the map. If you can't contact the author, it is on your own risk. If you don't get contact and still want to proceed, it is recommended that you do not alter gameplay or original files of the map. _This means include original pk3 and your custom pk3._ Also do remember to give full credit to the hard work by original author!

=== 1.3. Difference between Coop and SP ===

While you are reading this, you probably have basic understanding of the difference between Coop and SP. If not go to a server and try it out.

Basicly things are almost same. Same BSP files can be used. BSP file is the heart of the map. Generally SP maps and Coop maps are same, commands and file work the same. However as we are playing in SP maps in MP environment we need to have a little edits in the scripts. 

In most time all we need to do is edit the .AI file that has AI scripting in it. Then the .script file that has brush scripting. Also we need to add .ents file to add new entities, such as spawns. Rest of the file edits are mostly cosmetical.

=== 1.4. Folder where we store all the changing files ===

This is the main folder where all screenshots you take goes. Where your config is stored. Where game creates .ents file. This folder can be used to place mapping files for easy testing. Do mind this affects all installations!

In RTCW COOP 0.9.5 the folder locates in:

C://Documents and settings/User/Files/RtcwCOOP/main/

_Once you are ready with the map, you must pack it into a pk3! More later._

== 2. Getting able to shoot and run ==

I just want to frag a couple AIs in a custom SP map with my friends!

=== 2.1. Adding the map ===

It is simple. Download the original pk3 file. Place it in your game installation folder inside main folder. Just like you would do it in regular RTCW.

=== 2.2. Starting map ===

Load RTCW Coop. Type /coopdevmap mymapname into console. Doing this allows us to play the map in developer mode. We can use cheats. Check the list of useful commands to learn more.

The map should start now. Many things don't work, but you should be able to run around. If the map don't start it has faults. Try another map, debug it or ask for help.


=== 2.3. Let the mod read map scripts ===

 * 1) Open the custom pk3 file

 * 2) Go to folder main inside the pk3 file

 * 3) Copy the files called mymap.ai and mymap.script

 * 4) Paste these two files into C://Documents and settings/User/Files/RtcwCOOP/main/maps folder

_Most likely you don't have maps folder yet. Just add it like any other folder._

 * 5) Rename the files. You should now have mymap.coop.ai and mymap.coop.script files

Now the AI should have guns, be able to run and perform.

If the map has no script file, just ignore it for now. We will add one later.


=== 2.4. Adding first set of spawns ===

 * 1) Join Allied team. Go to where you want your first spawns.

 * 2) Type /dumpcoopspawnpoint into console, this will create first spawnpoint

 * 3) Repeat previous 8 times. We need 8 spawnpoints.
 
 * 4) Close game. 

 * 5) Go to C://Documents and settings/User/Files/RtcwCOOP/main/maps/ folder

 * 6) Open file mapname.ents in notepad

 * 7) Fix the spawnflags, game create them wrong in mod version 0.9.5:

{{{
{
"classname" "coop_spawnpoint"
"spawnflags" "1"
"origin" "2159 -6951 69"
"angle" "-83"
}
}}}

Change spawnflags from 1 to 3:

{{{
{
"classname" "coop_spawnpoint"
"spawnflags" "3"
"origin" "2159 -6951 69"
"angle" "-83"
}
}}}

 * 8) Do the previous to all 8 of them.

 * 9) Save and exit. Reload game and test it. Use /kill and see if you can spawn in 8 different locations.

Great. Now we also learned where the .ents file is located! This is all basicly we need to play the map.

*Additional info:*

Full list of spawnflags we have:
{{{
0 = disabled 
1 = enabled 
2 = allied and disabled           //Important
3 = allied and enabled            //Important
4 = axis and disabled
5 = axis and enabled              //Important
6 = axis and allied and disabled
7 = axis and allied and enabled
}}}

_You probably only need to know 2, 3 and 5_

=== 2.5. Packing up to play with your friends ===

 * 1) Create a new pk3 file called eg. mymap_coop_pk3

_It is recommended to create a new pk3 for the Coop files only._

 * 2) Create a folder called maps inside the pk3

 * 3) Paste the .ai ; .script and .ents file inside the maps folder

_You might want to add more files later on of course._

 * 4) Add the original SP map and the small Coop modification pk3 to your server.

 * 5) Enjoy! You are ready to play. It is not perfect, but you can shoot, AI can shoot. Yay! :)


== 3. Making the map work properly ==

Just running and shooting is not enough you? You want the map to play well, be able to win a map, finish objectives, hear music? Let's continue.

If we leave the scripts as they are now, it probably work somewhat when you play alone on local. But when a friend or friends join you, weird things start to happen. 

=== 3.1. Adding MP script support ===

Normally in SP the game starts from player scriptblock from spawn/playerstart events. Now problems come when a new player joins, because the spawn event gets triggered again. It will cause some objectives or other features to reset or re-run. So we need to change this behavior.


==== 3.1.1. First we need to add a script_multiplayer entity. ====

Now we will create a new entity we can use to start the round, handle objectives and any other things that might break the map if more than 1 player is on the server.

*You must have one and _only one_ script_multiplayer in your map for the scripts to work properly.*

 * 1) Open your .ents file.

 * 2) Add the following on top of everything in the file:

{{{
{
"classname" "script_multiplayer"
"scriptname" "game_manager"
}
}}}

 * 3) Close and save .ents file.


==== 3.1.2. Then we create the script for the script_multiplayer entity ====

 * 1) Open mymapname.coop.script file in notepad

_If the map don't have one. Copy an existing script file. Open it in notepad, empty it. And then rename it._

 * 2) Add the following on top of the .script file:

{{{
game_manager
{
	spawn
	{
		trigger player map_start
	}
}
}}}

 * 3) Save and close .script file


==== 3.1.3. Next we need the map to start MP style ====

In other words we will add that trigger map_start we just triggered.

 * 1) Open mymapname.coop.ai file and it looks like this:

{{{
player
{
   spawn
   {
    ...
   }

   playerstart
   {
   ....
   }

//and so on.......

}
}}}

 * 2) Add that trigger map_start we triggered from game_manager's spawn. It will look like this:

{{{
player
{
   spawn
   {
    ...
   }

   playerstart
   {
   ....
   }

   trigger map_start
   {
   //<- Add scripts here later
   }

//and so on.......
}
}}}

trigger map_start will have all things that should only run once during the map startup. We will look closer to this in the next chapter.

 * 3) *Do test now!* 

If the map script has basic bugs you will know it now. If the map will not start anymore, check the Problem solving section or ask at the forums! 

_Most probably if some spawn actions have no wait you will crash with a script error._

=== 3.2. Finding out where each map start script command goes to ===

Now we need to look deeper into what start up commands we have and where we need to place them.

==== 3.2.1. Short explanation ====

{{{
spawn
{

}
}}}

This event is run everytime a new player joins. We only must have following commands here:

 * Giving the player ammo/items/guns or anything related to this
_These will not affect other players.

 * Add music. *MUST BE mu_start sound/...*  !!!

_Otherwise the music will not start for all players. mu_start command is edited in Coop! It will not restart music for other players. Read more in music section._

Anything else will be elsewhere, or the command will be executed again everytime a new player joins.


{{{
playerstart
{

}
}}}

*This event must be emptied for Coop mod!* However leave it empty like this or you may get an error.

{{{
trigger map_start
{

}
}}}

This trigger will hold everything we want to have executed when the map starts. But not executed again when a new player joins. Eg.

 * Accums
 * Objective scripting
 * Episode info
 * Triggering map start scripts eg. make something happen
 * Number of secrets
 * Random respawing
 * Anything else you want at map start


==== 3.2.2. Fixing start commands in our example map ====

This is our starting point in the map christmas_map:

{{{
player
{
   spawn
   {
   accum 1 set 0
   objectivesneeded 1
   abort_if_loadgame
   mu_start sound/music/l_briefing_1
   print Mission Objective: Capture the German Camp
   }

   playerstart
   {
   giveweapon weapon_knife
   giveweapon weapon_luger
   setammo ammo_9mm 100
   giveweapon weapon_mp40
   setammo ammo_grenades 3
   setammo ammo_dynamite 1
   selectweapon weapon_mp40
   mu_fade 0 100
   mu_queue sound/music/music1
   wait 7000
   mu_stop 0 100
   }

   trigger map_start     //NOTE WE ADDED THIS IN PREVIOUS CHAPTER!
   {

   }

//and so on.......

}
}}}

 * 1) Look at spawn event. Remove if there are such commands as:

{{{
spawn
{
...
suggestweapon
abort_if_loadgame
mu_start sound/...
}
}}}

_Our example map has only the two last commands_

 * 2) Now copy the accum, any objective, episode and such commands to trigger map_start. It should look like this now:

_If there are more commands try determing what it does. If you need it or not._

{{{
player
{
   spawn
   {

   }

   playerstart
   {
   giveweapon weapon_knife
   giveweapon weapon_luger
   setammo ammo_9mm 100
   giveweapon weapon_mp40
   setammo ammo_grenades 3
   setammo ammo_dynamite 1
   selectweapon weapon_mp40
   mu_fade 0 100
   mu_queue sound/music/music1
   wait 7000
   mu_stop 0 100
   }

   trigger map_start
   {
   accum 1 set 0
   objectivesneeded 1
   print Mission Objective: Capture the German Camp
   }

//and so on.......

}
}}}

 * 3) Now we must empty playerstart. It no longer is supported. Leave the empty event thought or you might get an error. Only ammo and items and music should be moved to spawn event. Optional ones to the map_start. So it should look like following:


{{{
player
{
   spawn
   {
   giveweapon weapon_knife
   giveweapon weapon_luger
   setammo ammo_9mm 100
   giveweapon weapon_mp40
   setammo ammo_grenades 3
   setammo ammo_dynamite 1
   selectweapon weapon_mp40
   mu_fade 0 100
   mu_queue sound/music/music1
   wait 7000
   mu_stop 0 100
   }

   playerstart
   {

   }

   trigger map_start
   {
   accum 1 set 0
   objectivesneeded 1
   print Mission Objective: Capture the German Camp
   }

//and so on.......

}
}}}

 * 4) Now rename mu_queue to mu_start and remove all other mu_ commands from spawn event. 

_The particular example map has different idea on music. Check music scripting section, if you want something different than this. Cosmetics.._

The final result should look like this:

{{{
player
{
   spawn
   {
   giveweapon weapon_knife
   giveweapon weapon_luger
   setammo ammo_9mm 100
   giveweapon weapon_mp40
   setammo ammo_grenades 3
   setammo ammo_dynamite 1
   selectweapon weapon_mp40

   mu_start sound/music/music1
   }

   playerstart
   {

   }

   trigger map_start
   {
   accum 1 set 0
   objectivesneeded 1
   print Mission Objective: Capture the German Camp
   }

//and so on.......

}
}}}

*TEST YOUR MAP NOW*

_If it does not load, check that if you have a missing { or } or typos. Or go to Problem Solving._

=== 3.3. Make the objectives work properly ===

Best solution would be to move all accums and objective stuff to the game_manager in .script file. But this might not always be a must.

I have a lazy solution for you, that I have used sometimes.. So far it have worked for me. If you want to be extra safe then look at problem solving section.

Most common reason the objectives fail to work is because of accums. The next chapter might be enough to fix the objectives in some cases.

*Make sure to test all objectives with atleast 2 players.* _Also try it atleast twice in row. First you finish the objectives, then your fellow player should finish them._

=== 3.4. Make the accums work properly ===

*Accum commands do not work properly in player scriptblock!!!*

Reason for this is that multiple players share the scriptblock, but accum command is only read by the one who activated it. 

The solution to this is to turn all accum commands inside player scriptblock to globalaccums. 

*Repeat: Only inside player scriptblock!*

Difference between accum and globalaccum:
{{{
accum =  Only one scriptblock or one client can see this. These work normally in any other scriptblock than player.

globalaccum = All scriptblocks and clients can see this.

}}}


==== 3.4.1 Fixing accums inside player scriptblock ====

 * 1) Search the ai script with keyword globalaccum, if nothing shows up, good. If there are already globalaccum, check that the numbers don't overlap.

_The number that matter in this case is the first after accum command: 

globalaccum *0* set 0 //Proper values for this are 0-9_

 * 2) Select and copy player script block into another txt file 

_If there are only few triggers, do it manually._

 * 3) Use replace tool to replace accum with globalaccum

 * 4) Paste it back to the .ai script.


Definition of player script block with example:

{{{
player //Starts up with this
{
   spawn
   {
   ...

   globalaccum 5 set 0   //Used to be accum 5 set 0  
   }
   

//Lots of events and triggers...


  trigger endmap
  {

  globalaccum 5 abort_if_less_than 1  //Used to be accum 5 abort_if_less_than 1
  ...
  }


} //Ends up with second } in row
}}}

*!!!NOTE!!! DO NOT REPLACE ANY MORE THAN WHAT IS INSIDE PLAYER SCRIPTBLOCK!*

=== 3.5. Making music work properly ===

Coding music from SP to MP world is not simple. Here is the quick approach we have.

When a new player joins, he gets the first music that the map played. He will listen to the map starting music until it is changed with mu_fade/mu_queue command. Every player must start sounds with mu_start command, or it will fail to start. mu_start command is only executed to the newly joined player!


That's why we add mu_start in player spawn event. 

{{{
player
{
spawn
{
...
mu_start sound/..
}
}
}}}

*If you need to stop the music in the middle of the round. Use mu_stop.
You must restart the music in game_manager or only one player will hear it* eg:

{{{
game_manager
{
...

trigger restart_stopped_music
{
mu_start sound/...
}
}
}}}

Here is the more detailed info on how the mu_ commands were done in Coop.

{{{
mu_start: -In coop.ai file this only affects the client who called it, so you must use it in player->spawn event! This is only for map start. -If you need to start music in the middle of the map, place it in coop.script file!

mu_fade: -Affects all client in both coop.script and coop.ai file

mu_stop: -Affects all client in both coop.script and coop.ai file

mu_play: -Affects all client in both coop.script and coop.ai file

mu_queue: -Affects all client in both coop.script and coop.ai file 
}}}

=== 3.6. Making secret areas appear correctly in end stats ===

*If the map has no secret areas, do still read this tutorial.*

The secret area code is built one player in mind. Now when we have multiple players it tend to multiple the amount. We need to do following to fix this.

 * 1) Check the number of secrets. 

 * 2) Go to trigger map_start:

{{{
trigger map_start
{
...
}
}}}

 * 3) Add command numsecrets _amount_ somewhere in it.

_If there is none, you should still type number 0._

{{{
trigger map_start
{
...
numsecrets 3
}
}}}

This only affects the number presented in the end stats. Rest of the secret area scripts should work as in SP.

=== 3.7. Remove any cutscene scripting ===

_If your map has no cutscenes, skip this chapter. If it has, you might need some scripting understanding or help._

RTCW Coop mod does not support cutscenes. All camera script commands should be ignored by code, but it is safer to remove them.

Most of the times during a cutscene AI does some actions. Normally SP either plays the cutscene or you can skip it with a press of Esc button. Coop cannot do this. So you must manually skip the cutscene script actions. Do the following.

 * 1) Load the map in SP game. Go to part where cutscene starts. Try pressing Esc button. This should skip the cutscene. 

_If it does, good, please continue to next stage!_ 

_If Esc does not skip the cutscene, stop right here for a moment. You better know how to do some scripting. Or you can post it on the forums for others to solve. The part of the script needs to be redone to skip the cutscene, or the cutscene script will play out while you play the game._

 * 2) Search .ai file with a keyword _trigger camerainterrupt_

_This is the trigger that is executed when you press Esc_

Example from map Escape1:

{{{
   trigger camerainterrupt
   {
   stopcam
   trigger dummy cine1_cleanup
   }
}}}

 * 3) Copy the line with the trigger command

 * 4) Paste it to the action where the cutscene happens. Usually when the map starts:

{{{
   player
   {
   ....

   trigger map_start
   {
   ...

   trigger dummy cine1_cleanup  //Directly skip to end of the cutscene
   }
   ....
   }
}}}











== 4. Optional common Coop features ==

This is the list of common features most Coop maps should have in my opinion. These are not really required to play!

=== 4.1. AI reinforcements ===

This is the stage that requires most time.

Shooting at the default AI's get a little boring quickly. That is why we should add some reinforcements to make it more challenging. Usually we add about 20 AIs on many and 40 on More. _g_reinforce 1_ add many and _g_reinforce 2_ most AI.

==== 4.1.1. Adding an AI entity ====

 * 1) Load game

 * 2) Go to where you want your first new AI. Have yourself face same way you want the AI to face when he spawns.

 * 3) Dump the AI using command /dumpcastai classname ainame

Avaiblable classnames:
{{{
ai_soldier ai_american ai_zombie ai_warzombie ai_venom ai_loper ai_boss_helga ai_boss_heinrich ai_eliteguard ai_stimsoldier_dual ai_stimsoldier_rocket ai_stimsoldier_tesla ai_supersoldier ai_protosoldier ai_frogman ai_blackguard ai_partisan ai_civilian
}}}

_I like to leave ainame empty. Then you must fix the number manually in .ents file!_

Example:

{{{
/dumpcastai ai_soldier coop_ai_soldier_1
}}}

 * 4) Go to .ents file. Give the AI skin and face. If you skip this it will load default Escape1 skins. Look at skin and head key. Check existing maps for available skins.

{{{
{
"classname" "ai_soldier"
"origin" "-111 -98 24"
"ainame" "coop_ai_soldier_1"
"angle" "-92"
"spawnflags" "1"
"skin" "infantryss/factory1"  //<-
"head" "factory3"             //<-
}
}}}

==== 4.1.2. Giving our new AI basic attributes ====

 * 1) Open .ai file. 

 * 2) Add something like this script to the bottom of the .ai file:

_This makes it a default mp40 bot. [http://www.surfacegroup.org/tutorials/rtcw/ai_kim/ Here is a SP AI tutorial for little help if you want something else.]_

{{{
coop_ai_soldier_1 //NAME OF YOUR NEW AI!
{
    attributes
    {
        aim_accuracy 0.6
        starting_health 60
        camper 1
    }

    spawn
    {
        setammo ammo_grenades 0
        setammo ammo_9mm 999
        statetype alert
    }
}
}}}

==== 4.1.3. Making our new AI show up ingame ====

The AI's inside .ents should not appear in game without separately executing them.

_spawnflags = 1 would normally make AI appear at map_start, but it does not in .ents file_

*We have 3 common ways to execute it:*

{{{
alertentity coop_ai_soldier_1
}}}
_This spawns always. Not much used._
{{{
#if g_reinforce >= 1 alertentity coop_ai_soldier_1 #endif
}}}
_This spawns if we have /g_reinforcements set to 1 or 2
{{{
#if g_reinforce >= 2 alertentity coop_ai_soldier_1 #endif
}}}
_This spawns if we have /g_reinforcements 2

*So let's execute our AI at a desired time. Most often it happens at map_start or from some action.* 

_Add the command in the stage of the map where you want him to appear. Example:_

{{{
player
{
...
trigger action1 //Walk through the doorway
{
...
#if g_reinforce >= 1 alertentity coop_ai_soldier_1 #endif
}
...
}
}}}

*Save and test.*


==== 4.1.4. I want more than one AI ====

Repeat the three previous steps as many times you want, just remember to change the AIName. 

You can add around 100 before hitting a limit. But I don't recommend adding a lot more than 50. Also try not to place more than 10-20 in one open area in the map. Otherwise the map might end up really laggy for most of us. 

_40 is a good amount if you place them all over the map._


=== 4.2. Making single AI not respawning ===

Go through all the AI scripts to check this list through. This is recommened to those AI's that:
 * Activate a game event from the spawn or death event. 
 * If they respawn without a gun.
 * If he is a boss or something else special.
_It is recommended trying to rescript these first if possible. This is the last chance fix._

How to enable:

 * 1) Open .ai script
 * 2) Go to the specific AI's scriptblock
 * 3) Add command _norespawn_ to the spawn event

Example:
{{{
nazi1
{
spawn
{
//I am a special boy
trigger what_ever just_because
...
norespawn  //<- Add this
}
...
}
}}}

=== 4.3. Random respawning ===

We introduced a new feature to Coop to make the respawning little more reasonable. There is a feature to define that if one AI should select randomly if it respawns or not. So one round it can respawn and next round maybe not. Chances are 1/2 that it will respawn.

We controlled it in map script to select what it affects. Here is the rules we decided for standard maps:
 * If AI respawning is unlimited then all AI's will always respawn. 
 * If you limit the times AI can respawn to eg. 5 times _g_airespawn 5_ then all reinforcement AI's who has not norespawn command set will respawn randomly.
 * All regular SP AI's will respawn normally.

So in script:
{{{
#if g_airespawn >= 1  //Do not read this if AI respawning is infinite
	wait 5
	randomrespawn coop_ai_soldier_1
	//coop_ai_soldier_2 has norespawn
	randomrespawn coop_ai_soldier_3
	randomrespawn coop_ai_soldier_4
	randomrespawn coop_ai_soldier_5
	randomrespawn coop_ai_soldier_6
	randomrespawn coop_ai_soldier_7
	randomrespawn coop_ai_soldier_8
	randomrespawn coop_ai_soldier_9
	randomrespawn coop_ai_soldier_10
	wait 5  //Have wait!
	randomrespawn coop_ai_soldier_11
	randomrespawn coop_ai_soldier_12
	//List goes on.
#endif
}}}

*Normally we have around 40 reinforcements. If we put them all in list we will crash/lag the map. That is why there is _wait 5_ between every ten commands!*

=== 4.4. Flag spawns ===

We have a Cvar to allow us going into mode where we need to capture our spawnpoints. To enable this mode do _/g_spawnpoints 2_

Currently we only have the start spawns we created earlier. So do following to add a new flag spawn. It can be repeated to create more flags. Most maps we have has 2 flags.

 * 1) Run your map ingame
 * 2) Use command /dumpflagpole to drop a flag

_You must first add flag! Because the game will automatically link all spawnpoints that you drop until next /dumpflagpole command._ 

_If you fail on this, you can fix the linking in .ents file. Just match targetnames of the spawns to the the target key of the flag._

 * 3) Repeat /dumpcoopspawnpoint 8 times around the flag.

 * 4) Close game. Open .ents file. RTCW Coop 0.9.5 creates spawn flags wrong. So you must fix them like we did in the first spawns. But this time replace 0 with 2:

{{{
{
"classname" "coop_spawnpoint"
"spawnflags" "0"
"origin" "1021 6627 216"
"angle" "104"
"targetname" "tobruk2"
}
}}}

to

{{{
{
"classname" "coop_spawnpoint"
"spawnflags" "2"
"origin" "1021 6627 216"
"angle" "104"
"targetname" "tobruk2"
}
}}}

 * 5) Save, close ents and test!


=== 4.5. Axis spawnpoints ===

The Coop mod now supports having maximum of Two axis players. These need spawnpoints. One for each player.

They will use the spawnpoint we set only for the map start. After this they will respawn into location of a random AI close to action and kill this AI. That's why we don't use inactive axis spawnpoints atm.

*Let's add 2 new axis spawnpoints:*


 * 1) Load game

 * 2) Use command /dumpcoopspawnpoint twice. 

 * 3) Close game and open .ents file

 * 4) Find the new coop_spawnpoints from the bottom

 * 5) Change the "spawnflags" to "5" on both of them. 

_This will tell the game these are Axis spawnpoints and active._

 * 6) Check that the game did not add any targetname to these.

_If it did, remove the entire line eg:

"targetname" "sfm0" _

*End result should look like this:*

{{{
{
"classname" "coop_spawnpoint"
"spawnflags" "5" 
"origin" "-726 -3163 41" 
"angle" "0"
}
}}}

=== 4.6. Getting map to show up in Map list or Create server menu ===

Tired of starting your map with console? Let's make it available to be selected from the menus.

To see your map in menus, we need to add an arena file. 

==== 4.6.1. Follow these rules when you make your .arena file ====

 * Custom arenas are support
 * Never edit any existing arenas!
 * You should have only one arena for your entire project!
 * Include all your project maps in one arena file.
 * Arena file can be named almost anything just make sure you don't affect any other project.
_Good name for the arena file would be eg. myprojectname.arena_
 * Make sure it is not named .arena.txt
_if you are unsure how to make it, copy and edit one from Capuzzo_
 * Add the maps in the order they are played
_In future .arena file will be looked at to select a campaign to play. So it is important the first map is first in the list._

.

==== 4.6.2. This is how one map looks like in .arena file ====

{{{
{
map			"mymapname"
longname		"My project - My first map"
type		"coop_battle coop_speedrun coop_normal"
}
}}}

==== 4.6.3. Explanation of arena file syntax ====

||{||Starts a map||
||map||name_of_the_bsp||
||longname||The Name I want in menu||
||type||Don't touch unless said so||
||}||Ends a map||

_Q3 color codes are supported in longname!_


==== 4.6.3. Here is an example from Capuzzo Campaign ====

_Filename : capuzzo.arena_

{{{
{
map			"city"
longname		"^nCapuzzo 1 - The City"
type		"coop_battle coop_speedrun coop_normal"
}

{
map			"airport"
longname		"^nCapuzzo 2 - The Airport"
type		"coop_battle coop_speedrun coop_normal"
}

{
map			"road"
longname		"^nCapuzzo 3 - The Road away!"
type		"coop_battle coop_speedrun coop_normal"
}
}}}

==== 4.6.4. Where the arena file is located? ====

Arena file has to be located in scripts folder.

 * You can test it in ...files/RTCWCOOP/main/scripts

 * For releasing, create a folder called scripts into your mapname_coop.pk3.



=== 4.7. Creating loading image ===

This is the image we get while we are loading the map. 

*This image must be in power of two!* _eg. 256x128 or 64x512_

 * 1) Take a pic of your map.
 
 * 2) Add some effects in photo editor if you like to. Like Coop logo or map name.

_Please mind that it is not nice to add your own name here, unless you are the original author of the map!_

 * 3) Resize the pic into power of two. You probably want to make it 512x512 pixels.

 * 4) Make the pic uncompressed default jpg format.

 * 5) Save with name mymapname.jpg

 * 6) Create a folder called levelshots.

_For developing you can test it directly inside ...files/RTCWCoop/main/levelshots/.

 * 7) When it looks right place it in your mapname_coop_pk3 inside folder levelshots.

=== 4.8. Create server menu images ===

These are the images you see in the menu when you select the map in Create menu server. We have 3 different images in it:

 * ui_mapname.jpg
_This is the bigger image on left_
 * ui_mapname_s1.jpg
_This is the smaller image on top right_
 * ui_mapname_s2.jpg
_This is the smaller image on bottom right_

Check previous chapter. Same rules apply to these images.





== 5. Extra features ==
=== 5.1. Adding new entities like extra guns/item ===
=== 5.2. Using IF commands for advantage ===
=== 5. Adding Notebook text ===
=== 5. Adding ingame letters (clipboards) ===
=== 5. Adding location info ===

== 6. List of useful console commands ==

== 7. Problem solving ==
=== 7.1. Bugs mapper can not fix ===
=== 7.2. Script errors ===

*This usually happens after adding script_multiplayer or map_start:*

If your map fails to load with a script error. Check any AI who spawn at map_start that if they have special actions, it starts after a wait. This is normal action for a mapper to do to be safe in any Q3 engine game, but apparently not all mappers know this. Eg.

{{{
nazi1
{

spawn
{
//Hey I spawn at mapstart
wait 50 //Add me or you will crash the coop map muaha
trigger nazi1 go //I wanna go when I born
}
....
}
}}}


=== 7.3. Map objectives still bug ===

== 8. Example map ==

https://bzzwolfsp.googlecode.com/svn/wiki/mapping/christmas_map_coop_sage.pk3

== 9. Last words ==